{"version":3,"file":"static/js/33.291e2b9a.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://first-project/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://first-project/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://first-project/./src/components/Dialogs/MessageForm/MessageForm.module.css?93bd","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"messagesList\":\"Dialogs_messagesList__gG7Cl\"};","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"DialogItem_active__wvgh9\",\"dialogBlock\":\"DialogItem_dialogBlock__nkhjX\",\"avatar\":\"DialogItem_avatar__NkXld\"};","import React from 'react';\r\nimport classes from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <NavLink\r\n      to={props.path}\r\n      className={(navData) => (navData.isActive ? classes.active : null)}\r\n    >\r\n      <div className={classes.avatar}>\r\n        <img\r\n          src=\"https://im0-tub-ru.yandex.net/i?id=8d612cb897928ddfecd1b3d72260aa48-sr&n=13\"\r\n          alt=\"avatar\"\r\n        />\r\n      </div>\r\n      <div className={classes.dialogBlock}>{props.name}</div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Message_wrapper__w8N-+\",\"owner\":\"Message_owner__-yKxs\",\"message\":\"Message_message__rjHQQ\",\"logo\":\"Message_logo__fJkY9\"};","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <div className={classes.logo}>\r\n        <img\r\n          src=\"https://im0-tub-ru.yandex.net/i?id=8d612cb897928ddfecd1b3d72260aa48-sr&n=13\"\r\n          alt=\"logo\"\r\n        />\r\n      </div>\r\n      <div className={classes.message}>\r\n        <div className={classes.owner}>\r\n          <span>{props.owner === 'me' ? null : props.owner}</span>\r\n        </div>\r\n        {props.message}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"MessageForm_formContainer__in1AJ\"};","import React from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport classes from './MessageForm.module.css';\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ message: '' }}\r\n      onSubmit={(values, actions) => {\r\n        if (values.message.trim()) {\r\n          props.addMessage(values.message);\r\n        }\r\n        actions.resetForm({ message: '' });\r\n      }}\r\n    >\r\n      <Form className={classes.formContainer}>\r\n        <Field name=\"message\" placeholder=\"Type your message\" type=\"text\" />\r\n        <button type=\"submit\" className={'submit'}>\r\n          Send\r\n        </button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport MessageForm from './MessageForm/MessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n  const DialogsElements = props.dialogPageState.dialogs.map((data, index) => (\r\n    <DialogItem path={String(data.id)} name={data.name} key={index} />\r\n  ));\r\n\r\n  const MessageElements = props.dialogPageState.messages.map((data, index) => (\r\n    <Message message={data.message} key={index} owner={data.owner} />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{DialogsElements}</div>\r\n      <div className={classes.messages}>\r\n        <div className={classes.messagesList}>{MessageElements}</div>\r\n        <div className={classes.messagesBtn}>\r\n          <MessageForm\r\n            textAreaMessageValue={props.dialogPageState.textAreaMessageValue}\r\n            addMessage={props.addMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { addMessage } from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass DialogsContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dialogs\r\n        dialogPageState={this.props.dialogPageState}\r\n        addMessage={this.props.addMessage}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogPageState: state.dialogPage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(DialogsContainer);\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (!props.isAuth) return <Navigate to=\"/login\" />;\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, null)(RedirectComponent);\r\n};\r\n"],"names":["props","to","path","className","navData","isActive","classes","src","alt","name","owner","message","initialValues","onSubmit","values","actions","trim","addMessage","resetForm","placeholder","type","DialogsElements","dialogPageState","dialogs","map","data","index","String","id","MessageElements","messages","textAreaMessageValue","DialogsContainer","this","React","compose","connect","state","dialogPage","withAuthRedirect","Component","isAuth","auth"],"sourceRoot":""}